// AUTOGENERATED FILE! DO NOT EDIT

syntax = "proto3";

//package my_package;


// common types
message sai_thrift_int {
    int32 value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// acl API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// ars API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// arsprofile API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// bfd API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// bridge API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// buffer API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// counter API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// debugcounter API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// dtel API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// fdb API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// genericprogrammable API types
message  {
     value = 1;
}


// hash API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// hostif API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// ipmc API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// ipmcgroup API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// ipsec API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// isolationgroup API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// l2mc API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// l2mcgroup API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// lag API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// macsec API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// mcastfdb API types
message  {
     value = 1;
}


// mirror API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// mpls API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// mymac API types
message  {
     value = 1;
}


// nat API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// neighbor API types
message  {
     value = 1;
}


// nexthop API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// nexthopgroup API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// policer API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// port API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// qosmap API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// queue API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// route API types
message  {
     value = 1;
}


// routerinterface API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// rpfgroup API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// samplepacket API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// scheduler API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// schedulergroup API types
message  {
     value = 1;
}


// srv6 API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// stp API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// switch API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// systemport API types
message  {
     value = 1;
}

message  {
     value = 1;
}


// tam API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// tunnel API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// udf API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// virtualrouter API types
message  {
     value = 1;
}


// vlan API types
message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}

message  {
     value = 1;
}


// wred API types
message  {
     value = 1;
}

message  {
     value = 1;
}



// object API structures
// warning: this struct is invalid and  manually defined - do not use
message sai_thrift_object_key_entry_t {
    int64 object_id = 1;
    int64 fdb_entry = 2;
    int64 neighbor_entry = 3;
    int64 route_entry = 4;
    int64 mcast_fdb_entry = 5;
    int64 l2mc_entry = 6;
    int64 ipmc_entry = 7;
    int64 inseg_entry = 8;
    int64 nat_entry = 9;
}

message sai_thrift_object_key_t {
    sai_thrift_object_key_entry_t key = 1;
}

message sai_thrift_attr_capability_t {
    bool create_implemented = 1;
    bool boolset_implemented = 2;
    bool get_implemented = 3;
}

message sai_thrift_query_attribute_enum_values_capability_msg_arg {
    sai_thrift_object_type_t object_type = 1;
    sai_thrift_attr_id_t attr_id = 2;
    int32 caps_count = 3;
}

message sai_thrift_object_type_get_availability_msg_arg {
    sai_thrift_object_type_t object_type = 1;
    sai_thrift_attr_id_t attr_id = 2;
    int32 attr_type = 3;
}

message sai_thrift_string_response {
    string value = 1;
}



// common types
message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
      = 12;
      = 13;
      = 14;
      = 15;
      = 16;
      = 17;
      = 18;
      = 19;
      = 20;
      = 21;
      = 22;
      = 23;
      = 24;
      = 25;
      = 26;
      = 27;
      = 28;
      = 29;
      = 30;
      = 31;
      = 32;
      = 33;
      = 34;
      = 35;
      = 36;
      = 37;
      = 38;
      = 39;
      = 40;
      = 41;
      = 42;
      = 43;
      = 44;
      = 45;
      = 46;
      = 47;
      = 48;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
      = 12;
      = 13;
      = 14;
      = 15;
      = 16;
      = 17;
      = 18;
      = 19;
      = 20;
      = 21;
      = 22;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
      = 12;
      = 13;
      = 14;
}

message  {
      = 1;
      = 2;
      = 3;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
      = 12;
      = 13;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}

message  {
      = 1;
      = 2;
      = 3;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
      = 8;
      = 9;
      = 10;
      = 11;
      = 12;
      = 13;
      = 14;
      = 15;
      = 16;
      = 17;
      = 18;
      = 19;
      = 20;
      = 21;
      = 22;
      = 23;
      = 24;
      = 25;
      = 26;
      = 27;
      = 28;
      = 29;
      = 30;
      = 31;
      = 32;
      = 33;
      = 34;
      = 35;
      = 36;
      = 37;
      = 38;
      = 39;
      = 40;
      = 41;
      = 42;
      = 43;
      = 44;
      = 45;
      = 46;
      = 47;
      = 48;
      = 49;
      = 50;
      = 51;
      = 52;
      = 53;
      = 54;
      = 55;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
}


// bfd API structures
message  {
      = 1;
      = 2;
}


// fdb API structures
message  {
      = 1;
      = 2;
      = 3;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}


// ipmc API structures
message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
}


// ipsec API structures
message  {
      = 1;
      = 2;
      = 3;
}


// l2mc API structures
message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
}


// mcastfdb API structures
message  {
      = 1;
      = 2;
      = 3;
}


// mpls API structures
message  {
      = 1;
      = 2;
}


// nat API structures
message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
}

message  {
      = 1;
      = 2;
}

message  {
      = 1;
      = 2;
      = 3;
      = 4;
}

message  {
      = 1;
      = 2;
}


// neighbor API structures
message  {
      = 1;
      = 2;
      = 3;
}


// port API structures
message  {
      = 1;
      = 2;
}


// queue API structures
message  {
      = 1;
      = 2;
      = 3;
}


// route API structures
message  {
      = 1;
      = 2;
      = 3;
}


// srv6 API structures
message  {
      = 1;
      = 2;
      = 3;
      = 4;
      = 5;
      = 6;
      = 7;
}



// common attribute list
message sai_thrift_attribute_list_t {
    repeated sai_thrift_attribute_t attr_list = 1;
    sai_thrift_int32_t attr_count = 2;
}



// error handling
message sai_thrift_exception {
    sai_thrift_status_t status = 1;
}



// error handling
message sai_thrift_response {
    bool success = 1;
}


message _msg_args {
     acl_table_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_table_oid = 1;
}
message _msg_args {
     acl_table_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_table_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     acl_entry_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_entry_oid = 1;
}
message _msg_args {
     acl_entry_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_entry_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     acl_counter_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_counter_oid = 1;
}
message _msg_args {
     acl_counter_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_counter_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     acl_range_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_range_oid = 1;
}
message _msg_args {
     acl_range_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_range_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     acl_table_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_table_group_oid = 1;
}
message _msg_args {
     acl_table_group_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_table_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     acl_table_group_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_table_group_member_oid = 1;
}
message _msg_args {
     acl_table_group_member_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_table_group_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     acl_table_chain_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     acl_table_chain_group_oid = 1;
}
message _msg_args {
     acl_table_chain_group_oid = 1;
     attr = 2;
}
message _msg_args {
     acl_table_chain_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ars_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ars_oid = 1;
}
message _msg_args {
     ars_oid = 1;
     attr = 2;
}
message _msg_args {
     ars_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ars_profile_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ars_profile_oid = 1;
}
message _msg_args {
     ars_profile_oid = 1;
     attr = 2;
}
message _msg_args {
     ars_profile_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     bfd_session_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     bfd_session_oid = 1;
}
message _msg_args {
     bfd_session_oid = 1;
     attr = 2;
}
message _msg_args {
     bfd_session_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     bfd_session_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     bfd_session_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     bfd_session_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     bridge_port_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     bridge_port_oid = 1;
}
message _msg_args {
     bridge_port_oid = 1;
     attr = 2;
}
message _msg_args {
     bridge_port_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     bridge_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     bridge_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     bridge_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     bridge_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     bridge_oid = 1;
}
message _msg_args {
     bridge_oid = 1;
     attr = 2;
}
message _msg_args {
     bridge_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     bridge_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     bridge_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     bridge_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     ingress_priority_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ingress_priority_group_oid = 1;
}
message _msg_args {
     ingress_priority_group_oid = 1;
     attr = 2;
}
message _msg_args {
     ingress_priority_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ingress_priority_group_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     ingress_priority_group_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     ingress_priority_group_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     buffer_pool_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     buffer_pool_oid = 1;
}
message _msg_args {
     buffer_pool_oid = 1;
     attr = 2;
}
message _msg_args {
     buffer_pool_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     buffer_pool_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     buffer_pool_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     buffer_pool_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     buffer_profile_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     buffer_profile_oid = 1;
}
message _msg_args {
     buffer_profile_oid = 1;
     attr = 2;
}
message _msg_args {
     buffer_profile_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     counter_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     counter_oid = 1;
}
message _msg_args {
     counter_oid = 1;
     attr = 2;
}
message _msg_args {
     counter_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     counter_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     counter_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     counter_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     debug_counter_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     debug_counter_oid = 1;
}
message _msg_args {
     debug_counter_oid = 1;
     attr = 2;
}
message _msg_args {
     debug_counter_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     dtel_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     dtel_oid = 1;
}
message _msg_args {
     dtel_oid = 1;
     attr = 2;
}
message _msg_args {
     dtel_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     dtel_queue_report_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     dtel_queue_report_oid = 1;
}
message _msg_args {
     dtel_queue_report_oid = 1;
     attr = 2;
}
message _msg_args {
     dtel_queue_report_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     dtel_int_session_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     dtel_int_session_oid = 1;
}
message _msg_args {
     dtel_int_session_oid = 1;
     attr = 2;
}
message _msg_args {
     dtel_int_session_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     dtel_report_session_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     dtel_report_session_oid = 1;
}
message _msg_args {
     dtel_report_session_oid = 1;
     attr = 2;
}
message _msg_args {
     dtel_report_session_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     dtel_event_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     dtel_event_oid = 1;
}
message _msg_args {
     dtel_event_oid = 1;
     attr = 2;
}
message _msg_args {
     dtel_event_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     fdb_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     fdb_entry = 1;
}
message _msg_args {
     fdb_entry = 1;
     attr = 2;
}
message _msg_args {
     fdb_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     switch_id = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     object_count = 1;
     fdb_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     object_count = 1;
     fdb_entry = 2;
     mode = 3;
     object_statuses = 4;
}
message _msg_args {
     object_count = 1;
     fdb_entry = 2;
     attr_list = 3;
     mode = 4;
     object_statuses = 5;
}
message _msg_args {
     object_count = 1;
     fdb_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     generic_programmable_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     generic_programmable_oid = 1;
}
message _msg_args {
     generic_programmable_oid = 1;
     attr = 2;
}
message _msg_args {
     generic_programmable_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     fine_grained_hash_field_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     fine_grained_hash_field_oid = 1;
}
message _msg_args {
     fine_grained_hash_field_oid = 1;
     attr = 2;
}
message _msg_args {
     fine_grained_hash_field_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hash_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     hash_oid = 1;
}
message _msg_args {
     hash_oid = 1;
     attr = 2;
}
message _msg_args {
     hash_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hostif_trap_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     hostif_trap_group_oid = 1;
}
message _msg_args {
     hostif_trap_group_oid = 1;
     attr = 2;
}
message _msg_args {
     hostif_trap_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hostif_trap_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     hostif_trap_oid = 1;
}
message _msg_args {
     hostif_trap_oid = 1;
     attr = 2;
}
message _msg_args {
     hostif_trap_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hostif_user_defined_trap_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     hostif_user_defined_trap_oid = 1;
}
message _msg_args {
     hostif_user_defined_trap_oid = 1;
     attr = 2;
}
message _msg_args {
     hostif_user_defined_trap_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hostif_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     hostif_oid = 1;
}
message _msg_args {
     hostif_oid = 1;
     attr = 2;
}
message _msg_args {
     hostif_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hostif_table_entry_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     hostif_table_entry_oid = 1;
}
message _msg_args {
     hostif_table_entry_oid = 1;
     attr = 2;
}
message _msg_args {
     hostif_table_entry_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     hostif_oid = 1;
     buffer_size = 2;
     buffer = 3;
     attr_count = 4;
     attr_list = 5;
}
message _msg_args {
     hostif_oid = 1;
     buffer_size = 2;
     buffer = 3;
     attr_count = 4;
     attr_list = 5;
}
message _msg_args {
     hostif_oid = 1;
     buffer_size = 2;
     buffer = 3;
     attr_count = 4;
     attr_list = 5;
}
message _msg_args {
     hostif_oid = 1;
     buffer = 2;
}
message _msg_args {
     ipmc_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipmc_entry = 1;
}
message _msg_args {
     ipmc_entry = 1;
     attr = 2;
}
message _msg_args {
     ipmc_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipmc_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ipmc_group_oid = 1;
}
message _msg_args {
     ipmc_group_oid = 1;
     attr = 2;
}
message _msg_args {
     ipmc_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipmc_group_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ipmc_group_member_oid = 1;
}
message _msg_args {
     ipmc_group_member_oid = 1;
     attr = 2;
}
message _msg_args {
     ipmc_group_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipsec_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ipsec_oid = 1;
}
message _msg_args {
     ipsec_oid = 1;
     attr = 2;
}
message _msg_args {
     ipsec_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipsec_port_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ipsec_port_oid = 1;
}
message _msg_args {
     ipsec_port_oid = 1;
     attr = 2;
}
message _msg_args {
     ipsec_port_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipsec_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     ipsec_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     ipsec_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     ipsec_sa_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     ipsec_sa_oid = 1;
}
message _msg_args {
     ipsec_sa_oid = 1;
     attr = 2;
}
message _msg_args {
     ipsec_sa_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     ipsec_sa_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     ipsec_sa_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     ipsec_sa_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     isolation_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     isolation_group_oid = 1;
}
message _msg_args {
     isolation_group_oid = 1;
     attr = 2;
}
message _msg_args {
     isolation_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     isolation_group_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     isolation_group_member_oid = 1;
}
message _msg_args {
     isolation_group_member_oid = 1;
     attr = 2;
}
message _msg_args {
     isolation_group_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     l2mc_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     l2mc_entry = 1;
}
message _msg_args {
     l2mc_entry = 1;
     attr = 2;
}
message _msg_args {
     l2mc_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     l2mc_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     l2mc_group_oid = 1;
}
message _msg_args {
     l2mc_group_oid = 1;
     attr = 2;
}
message _msg_args {
     l2mc_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     l2mc_group_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     l2mc_group_member_oid = 1;
}
message _msg_args {
     l2mc_group_member_oid = 1;
     attr = 2;
}
message _msg_args {
     l2mc_group_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     lag_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     lag_oid = 1;
}
message _msg_args {
     lag_oid = 1;
     attr = 2;
}
message _msg_args {
     lag_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     lag_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     lag_member_oid = 1;
}
message _msg_args {
     lag_member_oid = 1;
     attr = 2;
}
message _msg_args {
     lag_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     macsec_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     macsec_oid = 1;
}
message _msg_args {
     macsec_oid = 1;
     attr = 2;
}
message _msg_args {
     macsec_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     macsec_port_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     macsec_port_oid = 1;
}
message _msg_args {
     macsec_port_oid = 1;
     attr = 2;
}
message _msg_args {
     macsec_port_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     macsec_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     macsec_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     macsec_port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     macsec_flow_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     macsec_flow_oid = 1;
}
message _msg_args {
     macsec_flow_oid = 1;
     attr = 2;
}
message _msg_args {
     macsec_flow_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     macsec_flow_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     macsec_flow_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     macsec_flow_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     macsec_sc_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     macsec_sc_oid = 1;
}
message _msg_args {
     macsec_sc_oid = 1;
     attr = 2;
}
message _msg_args {
     macsec_sc_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     macsec_sc_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     macsec_sc_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     macsec_sc_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     macsec_sa_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     macsec_sa_oid = 1;
}
message _msg_args {
     macsec_sa_oid = 1;
     attr = 2;
}
message _msg_args {
     macsec_sa_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     macsec_sa_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     macsec_sa_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     macsec_sa_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     mcast_fdb_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     mcast_fdb_entry = 1;
}
message _msg_args {
     mcast_fdb_entry = 1;
     attr = 2;
}
message _msg_args {
     mcast_fdb_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     mirror_session_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     mirror_session_oid = 1;
}
message _msg_args {
     mirror_session_oid = 1;
     attr = 2;
}
message _msg_args {
     mirror_session_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     inseg_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     inseg_entry = 1;
}
message _msg_args {
     inseg_entry = 1;
     attr = 2;
}
message _msg_args {
     inseg_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     object_count = 1;
     inseg_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     object_count = 1;
     inseg_entry = 2;
     mode = 3;
     object_statuses = 4;
}
message _msg_args {
     object_count = 1;
     inseg_entry = 2;
     attr_list = 3;
     mode = 4;
     object_statuses = 5;
}
message _msg_args {
     object_count = 1;
     inseg_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     my_mac_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     my_mac_oid = 1;
}
message _msg_args {
     my_mac_oid = 1;
     attr = 2;
}
message _msg_args {
     my_mac_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     nat_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     nat_entry = 1;
}
message _msg_args {
     nat_entry = 1;
     attr = 2;
}
message _msg_args {
     nat_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     object_count = 1;
     nat_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     object_count = 1;
     nat_entry = 2;
     mode = 3;
     object_statuses = 4;
}
message _msg_args {
     object_count = 1;
     nat_entry = 2;
     attr_list = 3;
     mode = 4;
     object_statuses = 5;
}
message _msg_args {
     object_count = 1;
     nat_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     nat_zone_counter_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     nat_zone_counter_oid = 1;
}
message _msg_args {
     nat_zone_counter_oid = 1;
     attr = 2;
}
message _msg_args {
     nat_zone_counter_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     neighbor_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     neighbor_entry = 1;
}
message _msg_args {
     neighbor_entry = 1;
     attr = 2;
}
message _msg_args {
     neighbor_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     switch_id = 1;
}
message _msg_args {
     object_count = 1;
     neighbor_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     object_count = 1;
     neighbor_entry = 2;
     mode = 3;
     object_statuses = 4;
}
message _msg_args {
     object_count = 1;
     neighbor_entry = 2;
     attr_list = 3;
     mode = 4;
     object_statuses = 5;
}
message _msg_args {
     object_count = 1;
     neighbor_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     next_hop_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     next_hop_oid = 1;
}
message _msg_args {
     next_hop_oid = 1;
     attr = 2;
}
message _msg_args {
     next_hop_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     next_hop_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     next_hop_group_oid = 1;
}
message _msg_args {
     next_hop_group_oid = 1;
     attr = 2;
}
message _msg_args {
     next_hop_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     next_hop_group_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     next_hop_group_member_oid = 1;
}
message _msg_args {
     next_hop_group_member_oid = 1;
     attr = 2;
}
message _msg_args {
     next_hop_group_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     next_hop_group_map_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     next_hop_group_map_oid = 1;
}
message _msg_args {
     next_hop_group_map_oid = 1;
     attr = 2;
}
message _msg_args {
     next_hop_group_map_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     policer_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     policer_oid = 1;
}
message _msg_args {
     policer_oid = 1;
     attr = 2;
}
message _msg_args {
     policer_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     policer_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     policer_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     policer_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     port_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     port_oid = 1;
}
message _msg_args {
     port_oid = 1;
     attr = 2;
}
message _msg_args {
     port_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     port_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     port_oid = 1;
}
message _msg_args {
     port_pool_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     port_pool_oid = 1;
}
message _msg_args {
     port_pool_oid = 1;
     attr = 2;
}
message _msg_args {
     port_pool_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     port_pool_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     port_pool_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     port_pool_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     port_serdes_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     port_serdes_oid = 1;
}
message _msg_args {
     port_serdes_oid = 1;
     attr = 2;
}
message _msg_args {
     port_serdes_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     port_connector_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     port_connector_oid = 1;
}
message _msg_args {
     port_connector_oid = 1;
     attr = 2;
}
message _msg_args {
     port_connector_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     qos_map_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     qos_map_oid = 1;
}
message _msg_args {
     qos_map_oid = 1;
     attr = 2;
}
message _msg_args {
     qos_map_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     queue_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     queue_oid = 1;
}
message _msg_args {
     queue_oid = 1;
     attr = 2;
}
message _msg_args {
     queue_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     queue_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     queue_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     queue_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     route_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     route_entry = 1;
}
message _msg_args {
     route_entry = 1;
     attr = 2;
}
message _msg_args {
     route_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     object_count = 1;
     route_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     object_count = 1;
     route_entry = 2;
     mode = 3;
     object_statuses = 4;
}
message _msg_args {
     object_count = 1;
     route_entry = 2;
     attr_list = 3;
     mode = 4;
     object_statuses = 5;
}
message _msg_args {
     object_count = 1;
     route_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     router_interface_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     router_interface_oid = 1;
}
message _msg_args {
     router_interface_oid = 1;
     attr = 2;
}
message _msg_args {
     router_interface_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     router_interface_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     router_interface_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     router_interface_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     rpf_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     rpf_group_oid = 1;
}
message _msg_args {
     rpf_group_oid = 1;
     attr = 2;
}
message _msg_args {
     rpf_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     rpf_group_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     rpf_group_member_oid = 1;
}
message _msg_args {
     rpf_group_member_oid = 1;
     attr = 2;
}
message _msg_args {
     rpf_group_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     samplepacket_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     samplepacket_oid = 1;
}
message _msg_args {
     samplepacket_oid = 1;
     attr = 2;
}
message _msg_args {
     samplepacket_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     scheduler_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     scheduler_oid = 1;
}
message _msg_args {
     scheduler_oid = 1;
     attr = 2;
}
message _msg_args {
     scheduler_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     scheduler_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     scheduler_group_oid = 1;
}
message _msg_args {
     scheduler_group_oid = 1;
     attr = 2;
}
message _msg_args {
     scheduler_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     srv6_sidlist_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     srv6_sidlist_oid = 1;
}
message _msg_args {
     srv6_sidlist_oid = 1;
     attr = 2;
}
message _msg_args {
     srv6_sidlist_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     srv6_sidlist_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     srv6_sidlist_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     srv6_sidlist_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     my_sid_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     my_sid_entry = 1;
}
message _msg_args {
     my_sid_entry = 1;
     attr = 2;
}
message _msg_args {
     my_sid_entry = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     object_count = 1;
     my_sid_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     object_count = 1;
     my_sid_entry = 2;
     mode = 3;
     object_statuses = 4;
}
message _msg_args {
     object_count = 1;
     my_sid_entry = 2;
     attr_list = 3;
     mode = 4;
     object_statuses = 5;
}
message _msg_args {
     object_count = 1;
     my_sid_entry = 2;
     attr_count = 3;
     attr_list = 4;
     mode = 5;
     object_statuses = 6;
}
message _msg_args {
     stp_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     stp_oid = 1;
}
message _msg_args {
     stp_oid = 1;
     attr = 2;
}
message _msg_args {
     stp_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     stp_port_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     stp_port_oid = 1;
}
message _msg_args {
     stp_port_oid = 1;
     attr = 2;
}
message _msg_args {
     stp_port_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     platform_context = 1;
     device_addr = 2;
     start_reg_addr = 3;
     number_of_registers = 4;
     reg_val = 5;
}
message _msg_args {
     platform_context = 1;
     device_addr = 2;
     start_reg_addr = 3;
     number_of_registers = 4;
     reg_val = 5;
}
message _msg_args {
     switch_id = 1;
     device_addr = 2;
     start_reg_addr = 3;
     number_of_registers = 4;
     reg_val = 5;
}
message _msg_args {
     switch_id = 1;
     device_addr = 2;
     start_reg_addr = 3;
     number_of_registers = 4;
     reg_val = 5;
}
message _msg_args {
     switch_id = 1;
     device_addr = 2;
     start_reg_addr = 3;
     number_of_registers = 4;
     reg_val = 5;
}
message _msg_args {
     switch_id = 1;
     device_addr = 2;
     start_reg_addr = 3;
     number_of_registers = 4;
     reg_val = 5;
}
message _msg_args {
     switch_id = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     switch_id = 1;
}
message _msg_args {
     switch_id = 1;
     attr = 2;
}
message _msg_args {
     switch_id = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     switch_id = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     switch_id = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     switch_id = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     switch_tunnel_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     switch_tunnel_oid = 1;
}
message _msg_args {
     switch_tunnel_oid = 1;
     attr = 2;
}
message _msg_args {
     switch_tunnel_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     system_port_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     system_port_oid = 1;
}
message _msg_args {
     system_port_oid = 1;
     attr = 2;
}
message _msg_args {
     system_port_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_oid = 1;
}
message _msg_args {
     tam_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_math_func_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_math_func_oid = 1;
}
message _msg_args {
     tam_math_func_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_math_func_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_event_threshold_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_event_threshold_oid = 1;
}
message _msg_args {
     tam_event_threshold_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_event_threshold_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_int_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_int_oid = 1;
}
message _msg_args {
     tam_int_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_int_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_tel_type_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_tel_type_oid = 1;
}
message _msg_args {
     tam_tel_type_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_tel_type_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_report_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_report_oid = 1;
}
message _msg_args {
     tam_report_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_report_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_telemetry_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_telemetry_oid = 1;
}
message _msg_args {
     tam_telemetry_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_telemetry_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_transport_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_transport_oid = 1;
}
message _msg_args {
     tam_transport_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_transport_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_collector_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_collector_oid = 1;
}
message _msg_args {
     tam_collector_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_collector_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_event_action_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_event_action_oid = 1;
}
message _msg_args {
     tam_event_action_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_event_action_oid = 1;
     attr = 2;
}
message _msg_args {
     tam_event_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tam_event_oid = 1;
}
message _msg_args {
     tam_event_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tam_event_oid = 1;
     attr = 2;
}
message _msg_args {
     tunnel_map_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tunnel_map_oid = 1;
}
message _msg_args {
     tunnel_map_oid = 1;
     attr = 2;
}
message _msg_args {
     tunnel_map_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tunnel_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tunnel_oid = 1;
}
message _msg_args {
     tunnel_oid = 1;
     attr = 2;
}
message _msg_args {
     tunnel_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tunnel_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     tunnel_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     tunnel_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     tunnel_term_table_entry_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tunnel_term_table_entry_oid = 1;
}
message _msg_args {
     tunnel_term_table_entry_oid = 1;
     attr = 2;
}
message _msg_args {
     tunnel_term_table_entry_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     tunnel_map_entry_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     tunnel_map_entry_oid = 1;
}
message _msg_args {
     tunnel_map_entry_oid = 1;
     attr = 2;
}
message _msg_args {
     tunnel_map_entry_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     udf_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     udf_oid = 1;
}
message _msg_args {
     udf_oid = 1;
     attr = 2;
}
message _msg_args {
     udf_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     udf_match_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     udf_match_oid = 1;
}
message _msg_args {
     udf_match_oid = 1;
     attr = 2;
}
message _msg_args {
     udf_match_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     udf_group_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     udf_group_oid = 1;
}
message _msg_args {
     udf_group_oid = 1;
     attr = 2;
}
message _msg_args {
     udf_group_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     virtual_router_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     virtual_router_oid = 1;
}
message _msg_args {
     virtual_router_oid = 1;
     attr = 2;
}
message _msg_args {
     virtual_router_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     vlan_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     vlan_oid = 1;
}
message _msg_args {
     vlan_oid = 1;
     attr = 2;
}
message _msg_args {
     vlan_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     vlan_member_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     vlan_member_oid = 1;
}
message _msg_args {
     vlan_member_oid = 1;
     attr = 2;
}
message _msg_args {
     vlan_member_oid = 1;
     attr_count = 2;
     attr_list = 3;
}
message _msg_args {
     vlan_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     counters = 4;
}
message _msg_args {
     vlan_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
     mode = 4;
     counters = 5;
}
message _msg_args {
     vlan_oid = 1;
     number_of_counters = 2;
     counter_ids = 3;
}
message _msg_args {
     wred_oid = 1;
     switch_id = 2;
     attr_count = 3;
     attr_list = 4;
}
message _msg_args {
     wred_oid = 1;
}
message _msg_args {
     wred_oid = 1;
     attr = 2;
}
message _msg_args {
     wred_oid = 1;
     attr_count = 2;
     attr_list = 3;
}


service sai_rpc {

    // acl API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // ars API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // arsprofile API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // bfd API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // bridge API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // buffer API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // counter API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // debugcounter API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // dtel API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // fdb API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // genericprogrammable API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // hash API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // hostif API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // ipmc API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // ipmcgroup API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // ipsec API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // isolationgroup API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // l2mc API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // l2mcgroup API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // lag API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // macsec API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // mcastfdb API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // mirror API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // mpls API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // mymac API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // nat API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // neighbor API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // nexthop API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // nexthopgroup API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // policer API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // port API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // qosmap API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // queue API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // route API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // routerinterface API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // rpfgroup API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // samplepacket API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // scheduler API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // schedulergroup API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // srv6 API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // stp API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // switch API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // systemport API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // tam API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // tunnel API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // udf API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // virtualrouter API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // vlan API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // wred API
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    
    rpc (_msg_args)        returns ();
    

    // SAI utils

    // sai objects API
    rpc sai_thrift_query_attribute_enum_values_capability(sai_thrift_query_attribute_enum_values_capability_msg_arg) returns (sai_thrift_attribute_list_t);
    rpc sai_thrift_object_type_get_availability(sai_thrift_object_type_get_availability_msg_arg) returns (sai_thrift_uint64_t);
    rpc sai_thrift_switch_id_query(sai_thrift_object_id_t) returns (sai_thrift_object_id_t); 
    rpc sai_thrift_object_type_query(sai_thrift_object_id_t) returns (sai_thrift_object_type_t);
    rpc sai_thrift_api_uninitialize(sai_thrift_object_id_t) returns (sai_thrift_status_t);
}

